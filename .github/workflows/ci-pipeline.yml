name: Notes Application CI Pipeline
# create a CI pipeline based on the assignment specification
# remember to commit often

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 17.x
        uses: actions/setup-node@v3
        with:
          node-version: "17"

      - name: Install dependencies
        working-directory: ./src
        run: npm ci

      - name: Run linter
        working-directory: ./src
        run: npm run test-lint

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 17.x
        uses: actions/setup-node@v3
        with:
          node-version: "17"

      - name: Install dependencies
        working-directory: ./src
        run: npm ci

      - name: Run unit tests with coverage
        working-directory: ./src
        run: npm run test-unit -- --coverage

      - name: Upload unit test coverage
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-coverage
          path: ./src/coverage/icov-report/

  # integration-tests:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Use Node.js 17.x
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: "17"

  #     - name: Install dependencies
  #       working-directory: ./src
  #       run: npm ci

  #     - name: Install MongoDB
  #       run: sudo apt install -y mongodb-org

  #     - name: Start MongoDB
  #       run: sudo service mongod start

  #     - name: Run integration tests with coverage
  #       working-directory: ./src
  #       env:
  #         MONGODB_URI: mongodb://localhost:27017
  #       run: npm run test-integration -- --coverage

  #     - name: Upload integration test coverage
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: integration-test-coverage
  #         path: ./src/coverage/icov-report

  #     - name: Upload integration test results
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: integration-test-results
  #         path: ./src/junit.xml

  artifact:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 17.x
        uses: actions/setup-node@v3
        with:
          node-version: "17"

      - name: Install dependencies
        working-directory: ./src
        run: npm ci

      - name: List directory contents
        run: ls -la

      - name: Archive source code
        run: zip -r notes-app-1.1.0.zip src

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: notes-app-1.1.0
          path: notes-app-1.1.0.zip

  e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Install dependencies
        working-directory: ./src
        run: npm ci
      - name: Install Playwright Browsers
        working-directory: ./src
        run: npx playwright install-deps
      - name: Run Playwright tests
        working-directory: ./src
        run: npx playwright test
      - name: Upload e2e test results
        uses: actions/upload-artifact@v3
        with:
          name: e2e-test-results
          path: ./src/playwright-report/
